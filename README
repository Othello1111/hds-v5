HDS implemented in HDF5
==

The aim of this library is to reimplement the HDS API using
HDF5 with the initial aim of supporting NDF (which also means
ARY) and a secondary aim of being complete such that Starlink
applications will run without noticing.

Initially there will be no attempt to automatically detect
whether an input file is a native HDS file and silently switch
to the HDS library (or even silently attempt to "upgrade" to HDF5).

It must be possible though, to migrate an HDS file to HDF5, implying
that the native HDS API and similarly named HDF5 implementation must
be able to coexist in a single binary.

Known Issues
--

HDF5 can not support arrays of structures. This is a fundamental
problem for the new implementation suggesting that the common
structure of:

   HISTORY        <HISTORY>       {structure}
      CREATED        <_CHAR*24>      '2009-DEC-14 05:39:05.539'
      CURRENT_RECORD  <_INTEGER>     1
      RECORDS(10)    <HIST_REC>      {array of structures}

      Contents of RECORDS(1)
         DATE           <_CHAR*24>      '2009-DEC-14 05:39:05.579

will instead have to be written as RECORDS/RECORD_n

Structure types will have to be stored as attributes.

